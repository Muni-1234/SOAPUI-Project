<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="66ca369f-f897-4d3c-be1e-ced2ec449225" activeEnvironment="Default" name="SampleProject" resourceRoot="" soapui-version="5.4.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="TestSuite" value="TestSuite"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Select Report Type" value=""/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Export JUnit Results with test properties" value="false"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="TestCase" value="Assertions"/>
  <con:entry key="Username" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Save Project" value="false"/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:RestService" id="7b559f79-997b-4fae-9b9b-144c704b8964" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://reqres.in" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://reqres.in</con:endpoint></con:endpoints><con:resource name="Users" path="/api/users" id="bc48dc5a-5165-4ede-b717-82c735165a4f"><con:settings/><con:parameters><con:parameter><con:name>page</con:name><con:value>2/api/users</con:value><con:style>QUERY</con:style><con:default>2/api/users</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Users" id="5dc784ad-af89-4411-a82f-fd686ed5fa3e" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:user="https://reqres.in/api/users">user:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request" id="91899bf1-e6b5-4b42-964b-5551720900b3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://reqres.in</con:endpoint><con:request>{
    "name": "morpheus",
    "job": "leader"
}</con:request><con:originalUri>https://reqres.in/api/users</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="page" value="2/api/users" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>page</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="5e50442f-b885-4a68-a48b-a25add77657c" name="TestSuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="fae7078a-ea5c-41b4-9a01-3423c359daf3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase-1" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Request-1" id="bb412b0b-6ed5-4506-8c85-66ef7a9306c7"><con:settings/><con:config service="https://reqres.in" resourcePath="/api/users" methodName="Users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request-1" id="f49472ad-ce55-4451-a887-1232c1aec9d9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>https://reqres.in</con:endpoint><con:request>{
    "name": "morpheus",
    "job": "leader"
}</con:request><con:originalUri>https://reqres.in/api/users</con:originalUri><con:assertion type="Simple Contains" id="56c25eb7-42fa-43fe-82bf-079fa814a4ee" name="Contains"><con:configuration><token>morpheus</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="d893c6c6-22ac-4a2f-86de-6c572ca88755" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="0da6da4c-39c4-4c98-a4f2-89462f78af25" name="XPath Match"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

//*:name</path><content>morpheus</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="3d57d7b5-585e-4892-bd18-1f0ae2be8b2b" name="XPath Match 2"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

exists(//*:id)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="ffa39cae-7d67-4188-a7e4-a04f18566db5" name="XPath Match 3"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

matches(//*:id,'\d{1,3}')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XQuery Match" id="40ef72cd-5b30-4f65-a3d1-ab745cbc5f2d" name="XQuery Match"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

&lt;Result>
&lt;Name>{data(//*:name/text())}&lt;/Name>
&lt;/Result></path><content>&lt;Result>
  &lt;Name>morpheus&lt;/Name>
&lt;/Result></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>page</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Request-2" id="e9695ff4-9c53-4cda-9721-afeaa5e934e9"><con:settings/><con:config service="https://reqres.in" resourcePath="/api/users" methodName="Users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request-2" id="f49472ad-ce55-4451-a887-1232c1aec9d9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>https://reqres.in</con:endpoint><con:request>{
    "name": "morpheus",
    "job": "leader"
}</con:request><con:originalUri>https://reqres.in/api/users</con:originalUri><con:assertion type="Simple Contains" id="56c25eb7-42fa-43fe-82bf-079fa814a4ee" name="Contains"><con:configuration><token>morpheus</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="d893c6c6-22ac-4a2f-86de-6c572ca88755" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="0da6da4c-39c4-4c98-a4f2-89462f78af25" name="XPath Match"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

//*:name</path><content>morpheus</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="3d57d7b5-585e-4892-bd18-1f0ae2be8b2b" name="XPath Match 2"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

exists(//*:id)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="ffa39cae-7d67-4188-a7e4-a04f18566db5" name="XPath Match 3"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

matches(//*:id,'\d{1,3}')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XQuery Match" id="40ef72cd-5b30-4f65-a3d1-ab745cbc5f2d" name="XQuery Match"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

&lt;Result>
&lt;Name>{data(//*:name/text())}&lt;/Name>
&lt;/Result></path><content>&lt;Result>
  &lt;Name>morpheus&lt;/Name>
&lt;/Result></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>page</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetupAndTearDownGroovy" id="4a9e995c-3e0a-4c33-81b2-863e80d9f5e7"><con:settings/><con:config><script/></con:config></con:testStep><con:testStep type="restrequest" name="Request-3" id="7e3a11df-8004-4cbe-a51d-a798960f6f91"><con:settings/><con:config service="https://reqres.in" resourcePath="/api/users" methodName="Users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request-3" id="f49472ad-ce55-4451-a887-1232c1aec9d9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>https://reqres.in</con:endpoint><con:request>{
    "name": "morpheus",
    "job": "leader"
}</con:request><con:originalUri>https://reqres.in/api/users</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>page</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:setupScript>log.info ("This runs before all testcase-1")</con:setupScript><con:tearDownScript>log.info ("This runs After all testcase-1")</con:tearDownScript><con:properties/></con:testCase><con:testCase id="d9f53ba1-32fc-4684-9cef-cb6ca04b2c84" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Assertions" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Request-1" id="380701a1-f2d5-4039-a3b5-76a2e28753fb"><con:settings/><con:config service="https://reqres.in" resourcePath="/api/users" methodName="Users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request-1" id="f49472ad-ce55-4451-a887-1232c1aec9d9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>https://reqres.in</con:endpoint><con:request>{
    "name": "morpheus",
    "job": "leader"
}</con:request><con:originalUri>https://reqres.in/api/users</con:originalUri><con:assertion type="Simple Contains" id="4a3ee646-8d82-438c-96c9-9677ccd93939"><con:configuration/></con:assertion><con:assertion type="Simple Contains" id="1330ef92-47a2-4c3b-9410-ed82f38901af" name="Contains"><con:configuration><token>morpheus</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="f95fccbe-e8c2-4d94-b8c3-33fcf45cdac3" name="Not Contains"><con:configuration><token>Muni</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" id="432cfd5f-1a89-42a5-8639-03dcc0576870" name="XPath Match"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

//*:name</path><content>*orpheus</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XQuery Match" id="6ba56a6d-8eb8-47e4-8ba7-975d851c32a0" name="XQuery Match"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';



//*:name</path><content>&lt;user:name xmlns:user="https://reqres.in/api/users">morpheus&lt;/user:name></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="94803d9e-4776-4d88-ac2d-c3016b259669" name="JsonPath Count"><con:configuration><path>.job</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ffd7345e-fa86-4f18-80b1-fd9b1c5a3607" name="JsonPath Match"><con:configuration><path>.job</path><content>[leader]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="497f6f43-d3c0-4865-bea9-344a3e21b68c" name="JsonPath Existence Match"><con:configuration><path>.job</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath RegEx Match" id="1f2ad8d1-dca8-4ff4-b96c-955e49ab8b0d" name="JsonPath RegEx Match"><con:configuration><path>job</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments><regEx>leader</regEx></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ae4e7ed6-03cd-4df7-8f62-3433c712e518" name="JsonPath Existence Match 2"><con:configuration><path>exists(:*name)</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="224220bf-52d1-4451-b394-e082c412a764" name="Invalid HTTP Status Codes"><con:configuration><codes>400,500</codes></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="43acf63a-d86a-4cee-a0fc-c1868ad39321" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="6e1bd39b-11e7-4f12-a9e4-f976e730f314" name="Response SLA"><con:configuration><SLA>1982</SLA></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="da6be3d3-8ae7-4424-a0c7-f527d008dc2a" name="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="GroovyScriptAssertion" id="91f33f90-ec49-45ac-b397-7a975ef8558b" name="Script Assertion"><con:configuration><scriptText>
//Check Response time
//assert messageExchange.timeTaken &lt;412

//check for EndPoint
//log.info messageExchange.getEndpoint()

//def endpoint = "https://reqres.in/api/users?page=2%2Fapi%2Fusers"
//assert messageExchange.getEndpoint() == endpoint

//log.info (messageExchange.responseHeaders["Content-Length"])
//assert messageExchange.responseHeaders["Content-Length"]!= null

assert messageExchange.responseAttachments.length == 0
log.info (messageExchange.responseAttachments.length)
 </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>page</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Request-2" id="c0abf1af-d6fc-48b9-bc1a-9708c3794e29"><con:settings/><con:config service="https://reqres.in" resourcePath="/api/users" methodName="Users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request-2" id="f49472ad-ce55-4451-a887-1232c1aec9d9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>https://reqres.in</con:endpoint><con:request>{
    "name": "morpheus",
    "job": "leader"
}</con:request><con:originalUri>https://reqres.in/api/users</con:originalUri><con:assertion type="Simple Contains" id="77329587-514d-445b-8266-785d0e662a77" name="Contains"><con:configuration><token>Leader</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" id="455d79ba-95a7-461f-86da-a2f42a32c489" name="XPath Match"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';
//*:name</path><content>morpheus</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XQuery Match" id="7af8e86d-ec8e-45b8-871e-4a9193d9ed23" name="XQuery Match"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

//*:name</path><content>&lt;user:name xmlns:user="https://reqres.in/api/users">morpheus&lt;/user:name></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="431644bf-dd4b-4f26-8d07-93529c1ac412" name="Invalid HTTP Status Codes"><con:configuration><codes>400,500</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="9de5b25b-b360-4aac-8c30-01c6fe597495" name="Response SLA"><con:configuration><SLA>547</SLA></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="1e9e7aa1-cebd-432a-ba5c-102b099a9b29" name="JsonPath Count"><con:configuration><path>.job</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b3688b59-a44b-4bc6-a727-f8d9df7899b8" name="JsonPath Match"><con:configuration><path>.job</path><content>[leader]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="34f0f520-c4ee-41ad-aa15-084a612dab13" name="JsonPath Existence Match"><con:configuration><path>.job</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath RegEx Match" id="0cc56c1e-ed4d-41e0-81b2-ea4d9ca6b9b9" name="JsonPath RegEx Match"><con:configuration><path>name</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments><regEx>morpheus</regEx></con:configuration></con:assertion><con:assertion type="JsonPath RegEx Match" id="00207463-90a6-4e67-a221-f1c7fc7fd649"><con:configuration/></con:assertion><con:assertion type="GroovyScriptAssertion" id="c99600c7-08fe-4649-a99f-6e0ab2277b6c" name="Script Assertion"><con:configuration><scriptText>import groovy.json.JsonSlurper

def responseMessage = messageExchange.response.responseContent
def json = new JsonSlurper().parseText(responseMessage)
//log.info json
//log.info json.name

//assert node values
assert json.name.toString()!=null
assert json.name.toString() == "morpheus"


testStepName = messageExchange.modelItem.testStep.name
log.info testStepName

xmlHold = messageExchange.responseContentAsXml.toString()
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>page</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/><con:setupScript>log.info ("This runs before all testSuites")</con:setupScript><con:tearDownScript>log.info ("This runs before all testSuites")</con:tearDownScript></con:testSuite><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:beforeRunScript>log.info ("This runs before all testSuites")</con:beforeRunScript><con:afterRunScript>log.info ("This runs After all testSuites")</con:afterRunScript><con:sensitiveInformation/></con:soapui-project>