<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="da63bb24-945f-43e5-b9d0-c3d7e5c42ce1" activeEnvironment="Default" name="PostService" resourceRoot="" soapui-version="5.4.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="TestSuite" value="SampleRunAutoTestSuite1"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Select Report Type" value=""/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Export JUnit Results with test properties" value="false"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="TestCase" value="TestCase-1"/>
  <con:entry key="Username" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="Root Folder" value="C:\Users\User\Desktop\SOAP"/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Save Project" value="false"/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:RestService" id="e74a1709-3e2f-4ce1-8136-97dd6575cc1c" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://reqres.in" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://reqres.in</con:endpoint></con:endpoints><con:resource name="Users" path="/api/users" id="86253503-8b98-434c-9e43-b2810cadecd0"><con:settings/><con:parameters><con:parameter><con:name>page</con:name><con:value>2/api/users</con:value><con:style>QUERY</con:style><con:default>2/api/users</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Users" id="ef9ead0d-02ea-4363-959d-981dda436913" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:user="https://reqres.in/api/users">user:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request" id="f49472ad-ce55-4451-a887-1232c1aec9d9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://reqres.in</con:endpoint><con:request>{
    "name": "morpheus",
    "job": "leader"
}</con:request><con:originalUri>https://reqres.in/api/users</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="page" value="2/api/users" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>page</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="1ca91780-00b0-4595-bde0-aeb462a8e6ff" name="AutoTestSuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="a2f254da-0b1b-4bba-9a6a-7a1f14457b86" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase-1" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting></con:settings><con:testStep type="restrequest" name="Request-1" id="bf7ccdd5-1aae-4c39-849e-0bded8a136fe"><con:settings/><con:config service="https://reqres.in" resourcePath="/api/users" methodName="Users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request-1" id="f49472ad-ce55-4451-a887-1232c1aec9d9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>https://reqres.in</con:endpoint><con:request>{
    "name": "morpheus",
    "job": "leader"
}</con:request><con:originalUri>https://reqres.in/api/users</con:originalUri><con:assertion type="Simple Contains" id="56c25eb7-42fa-43fe-82bf-079fa814a4ee" name="Contains"><con:configuration><token>morpheus</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="d893c6c6-22ac-4a2f-86de-6c572ca88755" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="0da6da4c-39c4-4c98-a4f2-89462f78af25" name="XPath Match"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

//*:name</path><content>morpheus</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="3d57d7b5-585e-4892-bd18-1f0ae2be8b2b" name="XPath Match 2"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

exists(//*:id)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="ffa39cae-7d67-4188-a7e4-a04f18566db5" name="XPath Match 3"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

matches(//*:id,'\d{1,3}')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XQuery Match" id="40ef72cd-5b30-4f65-a3d1-ab745cbc5f2d" name="XQuery Match"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

&lt;Result>
&lt;Name>{data(//*:name/text())}&lt;/Name>
&lt;/Result></path><content>&lt;Result>
  &lt;Name>morpheus&lt;/Name>
&lt;/Result></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>page</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="2fba935a-4dbd-46bc-bfb0-c5c3a39f554b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Test</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Request-1</con:sourceStep><con:sourcePath>$job

</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Request-2</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Request-2" id="f5e7d33a-640d-4c19-b275-3d8ae1ef2335"><con:settings/><con:config service="https://reqres.in" resourcePath="/api/users" methodName="Users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request-2" id="f49472ad-ce55-4451-a887-1232c1aec9d9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://reqres.in</con:endpoint><con:request>leader</con:request><con:originalUri>https://reqres.in/api/users</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="page" value="2/api/users" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>page</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="ddfcfa53-d0d8-472c-abdd-e40a776327fc"><con:settings/><con:config><script>//log.info "Muni"
//log.error "Chandra"

int a=30
int b=20

log.info ("Addition Result : "+(a+b))
log.info ("Substraction Result : "+(a-b))
log.info ("Multiplication Result : "+(a*b))
log.info " ======================================================================"

//String Operations:
String name="Muni"+"Chandra "+"Reddy"
log.info ("String Concatination : "+name)
log.info " ======================================================================"

int c=100
log.info ("After Increment : "+(c++))
log.info ("Before Increment : "+(++c))
log.info " ======================================================================"

//https://www.youtube.com/watch?v=fs-gHPMFJ20



</script></con:config></con:testStep><con:testStep type="groovy" name="Excel" id="618fbbaa-8ee0-4aea-8ecf-a5413aaecfb3"><con:settings/><con:config><script>/*
import jxl.*
import jxl.write.*
//https://community.smartbear.com/t5/SoapUI-Open-Source/How-to-save-response-data-in-Excel-CSV-format-in-SOAP-UI-5-2-1/td-p/115816
//https://www.youtube.com/watch?v=xdw4F2xo1io
//https://www.youtube.com/watch?v=5OvSxItqYCk
//https://community.smartbear.com/t5/SoapUI-Open-Source/How-to-write-the-Soap-response-in-to-an-existing-excel-file-in/td-p/140778
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context )
def holder = groovyUtils.getXmlHolder("Request-1#ResponseAsXml") // Change RequestStep name

log.info holder.getXml()  // will display /Log the response in Xml

WritableWorkbook workbook = Workbook.createWorkbook(new File("C:/Users/User/Desktop/output.xls"))
WritableSheet sheet = workbook.createSheet("Worksheet 1", 0)

log.info(sheet.isHidden())

xPath1 = "//*:id/text()"     // use xPath to access the value from response
//xPath2 = "//*:content/text()"

log.info holder.getNodeValue(xPath1)
//log.info holder.getNodeValue(xPath2)

Label label = new Label(0, 0, holder.getNodeValue(xPath1)); //column=0,row=1
sheet.addCell(label);
//Label label1 = new Label(2, 2, holder.getNodeValue(xPath2)); //column=2,row=2
//sheet.addCell(label1); 

workbook.write();
workbook.close();
*/

/*responseContent = testRunner.testCase.getTestStepByName("Request-1").getPropertyValue("response")
log.info "Response:  "+responseContent*/

import java.io.*
import jxl.*
import jxl.write.*
import java.text.SimpleDateFormat

def nf = new File("C:\\Users\\User\\Desktop\\output.xls");
def wb = Workbook.getWorkbook(nf)
def ws = wb.getSheet("Worksheet 1")
rc= ws.getRows()
cc = ws.getColumns();
log.info " Rows Count: "+rc
log.info " Columns Count: "+cc

for (i=1;i&lt;rc;i++)
{
	for (j=1;j&lt;cc;j++)
	{
		def var1 = ws.getCell(i,j);	
		log.info var1.getContents();
	}
}
//https://www.youtube.com/watch?v=xdw4F2xo1io
//https://www.youtube.com/watch?v=5OvSxItqYCk&amp;pbjreload=10






</script></con:config></con:testStep><con:testStep type="groovy" name="Execution" id="3b0c66dd-d69e-4e18-9c89-3d3d10d2ac33"><con:settings/><con:config><script>def status = testRunner.runTestStepByName("Request-1");
log.info ("  >>>  "+status);

def result = status.getStatus().toString();
log.info ("  >>>  "+result);

if(result == "OK"){
	log.info ("  >>>  Test Passed");
}else{
	log.info ("  >>>  Test Failed");
}

</script></con:config></con:testStep><con:properties><con:property><con:name>Ê»?Æd?ÓEA?ëÏg7ò¢¿?4?Ôið¿DºŒÉ&lt;¦÷?™±ù’ÍW?â?0ä¾ü?ù/???ÿÿ??PK??????????!?�VD’”???G???????docProps/app.xml ¢??( ??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????œ“Okã0?Åï?û?Œî�œ´”%È*%ÝÒÃ.?HÚ</con:name><con:value>«ò8?•%£™š¤Ÿ~Ç6IœýsY�Fó?�ŸF’ºÛ7>ë ¡‹¡?óY.2?6–.ì</con:value></con:property></con:properties></con:testCase><con:testCase id="abe094d1-1692-41dd-977b-9b7362578ad1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase-2" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting></con:settings><con:testStep type="restrequest" name="Request" id="fb6f572c-2db7-4bf1-b433-70664c0b1e2b"><con:settings/><con:config service="https://reqres.in" resourcePath="/api/users" methodName="Users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request" id="f49472ad-ce55-4451-a887-1232c1aec9d9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>https://reqres.in</con:endpoint><con:request>{
    "name": "morpheus",
    "job": "leader"
}</con:request><con:originalUri>https://reqres.in/api/users</con:originalUri><con:assertion type="Simple Contains" id="56c25eb7-42fa-43fe-82bf-079fa814a4ee" name="Contains"><con:configuration><token>morpheus</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="d893c6c6-22ac-4a2f-86de-6c572ca88755" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="0da6da4c-39c4-4c98-a4f2-89462f78af25" name="XPath Match"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

//*:name</path><content>morpheus</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="3d57d7b5-585e-4892-bd18-1f0ae2be8b2b" name="XPath Match 2"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

exists(//*:id)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="ffa39cae-7d67-4188-a7e4-a04f18566db5" name="XPath Match 3"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

matches(//*:id,'\d{1,3}')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XQuery Match" id="40ef72cd-5b30-4f65-a3d1-ab745cbc5f2d" name="XQuery Match"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

&lt;Result>
&lt;Name>{data(//*:name/text())}&lt;/Name>
&lt;/Result></path><content>&lt;Result>
  &lt;Name>morpheus&lt;/Name>
&lt;/Result></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>page</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>Ê»?Æd?ÓEA?ëÏg7ò¢¿?4?Ôið¿DºŒÉ&lt;¦÷?™±ù’ÍW?â?0ä¾ü?ù/???ÿÿ??PK??????????!?�VD’”???G???????docProps/app.xml ¢??( ??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????œ“Okã0?Åï?û?Œî�œ´”%È*%ÝÒÃ.?HÚ</con:name><con:value>«ò8?•%£™š¤Ÿ~Ç6IœýsY�Fó?�ŸF’ºÛ7>ë ¡‹¡?óY.2?6–.ì</con:value></con:property></con:properties></con:testCase><con:testCase id="237c1969-0d5f-45f3-962b-1441ddd68d9b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase-3" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting></con:settings><con:testStep type="restrequest" name="Request" id="23995d47-aaa5-41a2-a843-18d7957e5bcd"><con:settings/><con:config service="https://reqres.in" resourcePath="/api/users" methodName="Users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request" id="f49472ad-ce55-4451-a887-1232c1aec9d9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>https://reqres.in</con:endpoint><con:request>{
    "name": "morpheus",
    "job": "leader"
}</con:request><con:originalUri>https://reqres.in/api/users</con:originalUri><con:assertion type="Simple Contains" id="56c25eb7-42fa-43fe-82bf-079fa814a4ee" name="Contains"><con:configuration><token>morpheus</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="d893c6c6-22ac-4a2f-86de-6c572ca88755" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="0da6da4c-39c4-4c98-a4f2-89462f78af25" name="XPath Match"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

//*:name</path><content>morpheus</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="3d57d7b5-585e-4892-bd18-1f0ae2be8b2b" name="XPath Match 2"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

exists(//*:id)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="ffa39cae-7d67-4188-a7e4-a04f18566db5" name="XPath Match 3"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

matches(//*:id,'\d{1,3}')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XQuery Match" id="40ef72cd-5b30-4f65-a3d1-ab745cbc5f2d" name="XQuery Match"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

&lt;Result>
&lt;Name>{data(//*:name/text())}&lt;/Name>
&lt;/Result></path><content>&lt;Result>
  &lt;Name>morpheus&lt;/Name>
&lt;/Result></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>page</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="cca44a92-92a5-44bd-ad91-e5ba54bd68d8"><con:settings/><con:config><script>def tCase = testRunner.testCase.testSuite.testCases["TestCase-1"];
def prop  = new com.eviware.soapui.support.types.StringToObjectMap();

runner = tCase.run(null,false);

log.info ("   >>>   "+runner.getStatus().toString());

def testcases = context.testCase.testSuite.getTestCaseList()

testcases.each
{
	log.info("  >>>  "+it.name)

	if(it.name == "TestCase-1")
	{
	log.info("  >>  This is Test case-1")
	}
}
log.info(" TestCaseName is:  "+testRunner.testCase.name)</script></con:config></con:testStep><con:properties><con:property><con:name>Ê»?Æd?ÓEA?ëÏg7ò¢¿?4?Ôið¿DºŒÉ&lt;¦÷?™±ù’ÍW?â?0ä¾ü?ù/???ÿÿ??PK??????????!?�VD’”???G???????docProps/app.xml ¢??( ??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????œ“Okã0?Åï?û?Œî�œ´”%È*%ÝÒÃ.?HÚ</con:name><con:value>«ò8?•%£™š¤Ÿ~Ç6IœýsY�Fó?�ŸF’ºÛ7>ë ¡‹¡?óY.2?6–.ì</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>city</con:name><con:value>Muni</con:value></con:property><con:property><con:name>county</con:name><con:value>India</con:value></con:property></con:properties></con:testSuite><con:testSuite id="b754904d-27df-4a18-ad4f-85bf886b0977" name="SampleRunAutoTestSuite1"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="37126856-2bcc-494e-b08d-79773b87d2b2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase-1" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting></con:settings><con:testStep type="restrequest" name="Request-1" id="6b8d3c53-8b2f-4ff5-8a74-ac30c1aaa0c4"><con:settings/><con:config service="https://reqres.in" resourcePath="/api/users" methodName="Users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request-1" id="f49472ad-ce55-4451-a887-1232c1aec9d9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>https://reqres.in</con:endpoint><con:request>{
    "name": "morpheus",
    "job": "leader"
}</con:request><con:originalUri>https://reqres.in/api/users</con:originalUri><con:assertion type="Simple Contains" id="56c25eb7-42fa-43fe-82bf-079fa814a4ee" name="Contains"><con:configuration><token>morpheus</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="d893c6c6-22ac-4a2f-86de-6c572ca88755" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="0da6da4c-39c4-4c98-a4f2-89462f78af25" name="XPath Match"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

//*:name</path><content>morpheus</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="3d57d7b5-585e-4892-bd18-1f0ae2be8b2b" name="XPath Match 2"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

exists(//*:id)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="ffa39cae-7d67-4188-a7e4-a04f18566db5" name="XPath Match 3"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

matches(//*:id,'\d{1,3}')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XQuery Match" id="40ef72cd-5b30-4f65-a3d1-ab745cbc5f2d" name="XQuery Match"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

&lt;Result>
&lt;Name>{data(//*:name/text())}&lt;/Name>
&lt;/Result></path><content>&lt;Result>
  &lt;Name>morpheus&lt;/Name>
&lt;/Result></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>page</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>Ê»?Æd?ÓEA?ëÏg7ò¢¿?4?Ôið¿DºŒÉ&lt;¦÷?™±ù’ÍW?â?0ä¾ü?ù/???ÿÿ??PK??????????!?�VD’”???G???????docProps/app.xml ¢??( ??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????œ“Okã0?Åï?û?Œî�œ´”%È*%ÝÒÃ.?HÚ</con:name><con:value>«ò8?•%£™š¤Ÿ~Ç6IœýsY�Fó?�ŸF’ºÛ7>ë ¡‹¡?óY.2?6–.ì</con:value></con:property></con:properties></con:testCase><con:testCase id="e64da69a-05ba-4099-94c7-43b442039226" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase-2" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting></con:settings><con:testStep type="restrequest" name="Request" id="b1a1b0bb-465e-4284-84e9-67891a5d17cb"><con:settings/><con:config service="https://reqres.in" resourcePath="/api/users" methodName="Users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request" id="f49472ad-ce55-4451-a887-1232c1aec9d9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>https://reqres.in</con:endpoint><con:request>{
    "name": "morpheus",
    "job": "leader"
}</con:request><con:originalUri>https://reqres.in/api/users</con:originalUri><con:assertion type="Simple Contains" id="56c25eb7-42fa-43fe-82bf-079fa814a4ee" name="Contains"><con:configuration><token>morpheus</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="d893c6c6-22ac-4a2f-86de-6c572ca88755" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="0da6da4c-39c4-4c98-a4f2-89462f78af25" name="XPath Match"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

//*:name</path><content>morpheus</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="3d57d7b5-585e-4892-bd18-1f0ae2be8b2b" name="XPath Match 2"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

exists(//*:id)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="ffa39cae-7d67-4188-a7e4-a04f18566db5" name="XPath Match 3"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

matches(//*:id,'\d{1,3}')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XQuery Match" id="40ef72cd-5b30-4f65-a3d1-ab745cbc5f2d" name="XQuery Match"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

&lt;Result>
&lt;Name>{data(//*:name/text())}&lt;/Name>
&lt;/Result></path><content>&lt;Result>
  &lt;Name>morpheus&lt;/Name>
&lt;/Result></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>page</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>Ê»?Æd?ÓEA?ëÏg7ò¢¿?4?Ôið¿DºŒÉ&lt;¦÷?™±ù’ÍW?â?0ä¾ü?ù/???ÿÿ??PK??????????!?�VD’”???G???????docProps/app.xml ¢??( ??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????œ“Okã0?Åï?û?Œî�œ´”%È*%ÝÒÃ.?HÚ</con:name><con:value>«ò8?•%£™š¤Ÿ~Ç6IœýsY�Fó?�ŸF’ºÛ7>ë ¡‹¡?óY.2?6–.ì</con:value></con:property></con:properties></con:testCase><con:testCase id="c776e7f9-b50a-4838-a290-93eac9a95e5c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase-3" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting></con:settings><con:testStep type="restrequest" name="Request" id="ec10ee46-a0d7-4280-842c-ab340b450f1b"><con:settings/><con:config service="https://reqres.in" resourcePath="/api/users" methodName="Users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request" id="f49472ad-ce55-4451-a887-1232c1aec9d9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>https://reqres.in</con:endpoint><con:request>{
    "name": "morpheus",
    "job": "leader"
}</con:request><con:originalUri>https://reqres.in/api/users</con:originalUri><con:assertion type="Simple Contains" id="56c25eb7-42fa-43fe-82bf-079fa814a4ee" name="Contains"><con:configuration><token>morpheus</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="d893c6c6-22ac-4a2f-86de-6c572ca88755" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="0da6da4c-39c4-4c98-a4f2-89462f78af25" name="XPath Match"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

//*:name</path><content>morpheus</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="3d57d7b5-585e-4892-bd18-1f0ae2be8b2b" name="XPath Match 2"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

exists(//*:id)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="ffa39cae-7d67-4188-a7e4-a04f18566db5" name="XPath Match 3"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

matches(//*:id,'\d{1,3}')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XQuery Match" id="40ef72cd-5b30-4f65-a3d1-ab745cbc5f2d" name="XQuery Match"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

&lt;Result>
&lt;Name>{data(//*:name/text())}&lt;/Name>
&lt;/Result></path><content>&lt;Result>
  &lt;Name>morpheus&lt;/Name>
&lt;/Result></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>page</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>Ê»?Æd?ÓEA?ëÏg7ò¢¿?4?Ôið¿DºŒÉ&lt;¦÷?™±ù’ÍW?â?0ä¾ü?ù/???ÿÿ??PK??????????!?�VD’”???G???????docProps/app.xml ¢??( ??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????œ“Okã0?Åï?û?Œî�œ´”%È*%ÝÒÃ.?HÚ</con:name><con:value>«ò8?•%£™š¤Ÿ~Ç6IœýsY�Fó?�ŸF’ºÛ7>ë ¡‹¡?óY.2?6–.ì</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>city</con:name><con:value>Muni</con:value></con:property><con:property><con:name>county</con:name><con:value>India</con:value></con:property></con:properties></con:testSuite><con:testSuite id="b01596c2-ebfc-4328-bf28-20fb77d3e52c" name="SampleRunAutoTestSuite2"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="31e8e215-7d24-4b91-8893-10d8bdb3e9e7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase-1" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting></con:settings><con:testStep type="restrequest" name="Request-1" id="2497e1ae-1202-40e8-aeae-bf11995926a3"><con:settings/><con:config service="https://reqres.in" resourcePath="/api/users" methodName="Users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request-1" id="f49472ad-ce55-4451-a887-1232c1aec9d9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>https://reqres.in</con:endpoint><con:request>{
    "name": "morpheus",
    "job": "leader"
}</con:request><con:originalUri>https://reqres.in/api/users</con:originalUri><con:assertion type="Simple Contains" id="56c25eb7-42fa-43fe-82bf-079fa814a4ee" name="Contains"><con:configuration><token>morpheus</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="d893c6c6-22ac-4a2f-86de-6c572ca88755" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="0da6da4c-39c4-4c98-a4f2-89462f78af25" name="XPath Match"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

//*:name</path><content>morpheus</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="3d57d7b5-585e-4892-bd18-1f0ae2be8b2b" name="XPath Match 2"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

exists(//*:id)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="ffa39cae-7d67-4188-a7e4-a04f18566db5" name="XPath Match 3"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

matches(//*:id,'\d{1,3}')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XQuery Match" id="40ef72cd-5b30-4f65-a3d1-ab745cbc5f2d" name="XQuery Match"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

&lt;Result>
&lt;Name>{data(//*:name/text())}&lt;/Name>
&lt;/Result></path><content>&lt;Result>
  &lt;Name>morpheus&lt;/Name>
&lt;/Result></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>page</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="f4b537f5-77f0-4de0-9d90-1017a418ef91"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Test</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Request-1</con:sourceStep><con:sourcePath>$job

</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Request-2</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Request-2" id="02768a37-984a-47be-b9fb-32aea0991c91"><con:settings/><con:config service="https://reqres.in" resourcePath="/api/users" methodName="Users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request-2" id="f49472ad-ce55-4451-a887-1232c1aec9d9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://reqres.in</con:endpoint><con:request>leader</con:request><con:originalUri>https://reqres.in/api/users</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="page" value="2/api/users" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>page</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="86d02afa-a62e-4617-8f47-6c8249a8d1e5"><con:settings/><con:config><script>//log.info "Muni"
//log.error "Chandra"

int a=30
int b=20

log.info ("Addition Result : "+(a+b))
log.info ("Substraction Result : "+(a-b))
log.info ("Multiplication Result : "+(a*b))
log.info " ======================================================================"

//String Operations:
String name="Muni"+"Chandra "+"Reddy"
log.info ("String Concatination : "+name)
log.info " ======================================================================"

int c=100
log.info ("After Increment : "+(c++))
log.info ("Before Increment : "+(++c))
log.info " ======================================================================"

//https://www.youtube.com/watch?v=fs-gHPMFJ20



</script></con:config></con:testStep><con:testStep type="groovy" name="Excel" id="60fb2529-8f3d-4f43-ac58-8c1ef6be9548"><con:settings/><con:config><script>/*
import jxl.*
import jxl.write.*
//https://community.smartbear.com/t5/SoapUI-Open-Source/How-to-save-response-data-in-Excel-CSV-format-in-SOAP-UI-5-2-1/td-p/115816
//https://www.youtube.com/watch?v=xdw4F2xo1io
//https://www.youtube.com/watch?v=5OvSxItqYCk
//https://community.smartbear.com/t5/SoapUI-Open-Source/How-to-write-the-Soap-response-in-to-an-existing-excel-file-in/td-p/140778
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context )
def holder = groovyUtils.getXmlHolder("Request-1#ResponseAsXml") // Change RequestStep name

log.info holder.getXml()  // will display /Log the response in Xml

WritableWorkbook workbook = Workbook.createWorkbook(new File("C:/Users/User/Desktop/output.xls"))
WritableSheet sheet = workbook.createSheet("Worksheet 1", 0)

log.info(sheet.isHidden())

xPath1 = "//*:id/text()"     // use xPath to access the value from response
//xPath2 = "//*:content/text()"

log.info holder.getNodeValue(xPath1)
//log.info holder.getNodeValue(xPath2)

Label label = new Label(0, 0, holder.getNodeValue(xPath1)); //column=0,row=1
sheet.addCell(label);
//Label label1 = new Label(2, 2, holder.getNodeValue(xPath2)); //column=2,row=2
//sheet.addCell(label1); 

workbook.write();
workbook.close();
*/

/*responseContent = testRunner.testCase.getTestStepByName("Request-1").getPropertyValue("response")
log.info "Response:  "+responseContent*/

import java.io.*
import jxl.*
import jxl.write.*
import java.text.SimpleDateFormat

def nf = new File("C:\\Users\\User\\Desktop\\output.xls");
def wb = Workbook.getWorkbook(nf)
def ws = wb.getSheet("Worksheet 1")
rc= ws.getRows()
cc = ws.getColumns();
log.info " Rows Count: "+rc
log.info " Columns Count: "+cc

for (i=1;i&lt;rc;i++)
{
	for (j=1;j&lt;cc;j++)
	{
		def var1 = ws.getCell(i,j);	
		log.info var1.getContents();
	}
}
//https://www.youtube.com/watch?v=xdw4F2xo1io
//https://www.youtube.com/watch?v=5OvSxItqYCk&amp;pbjreload=10






</script></con:config></con:testStep><con:testStep type="groovy" name="Execution" id="4841ce73-c082-43ae-b465-9371c478aac5"><con:settings/><con:config><script>def status = testRunner.runTestStepByName("Request-1");
log.info ("  >>>  "+status);

def result = status.getStatus().toString();
log.info ("  >>>  "+result);

if(result == "OK"){
	log.info ("  >>>  Test Passed");
}else{
	log.info ("  >>>  Test Failed");
}

</script></con:config></con:testStep><con:properties><con:property><con:name>Ê»?Æd?ÓEA?ëÏg7ò¢¿?4?Ôið¿DºŒÉ&lt;¦÷?™±ù’ÍW?â?0ä¾ü?ù/???ÿÿ??PK??????????!?�VD’”???G???????docProps/app.xml ¢??( ??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????œ“Okã0?Åï?û?Œî�œ´”%È*%ÝÒÃ.?HÚ</con:name><con:value>«ò8?•%£™š¤Ÿ~Ç6IœýsY�Fó?�ŸF’ºÛ7>ë ¡‹¡?óY.2?6–.ì</con:value></con:property></con:properties></con:testCase><con:testCase id="e7d5ab39-c3aa-4f21-8bfc-0c98a59d2204" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase-2" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting></con:settings><con:testStep type="restrequest" name="Request" id="1fc1d690-4d1c-4cb4-a32e-adf1fa86d24d"><con:settings/><con:config service="https://reqres.in" resourcePath="/api/users" methodName="Users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request" id="f49472ad-ce55-4451-a887-1232c1aec9d9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>https://reqres.in</con:endpoint><con:request>{
    "name": "morpheus",
    "job": "leader"
}</con:request><con:originalUri>https://reqres.in/api/users</con:originalUri><con:assertion type="Simple Contains" id="56c25eb7-42fa-43fe-82bf-079fa814a4ee" name="Contains"><con:configuration><token>morpheus</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="d893c6c6-22ac-4a2f-86de-6c572ca88755" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="0da6da4c-39c4-4c98-a4f2-89462f78af25" name="XPath Match"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

//*:name</path><content>morpheus</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="3d57d7b5-585e-4892-bd18-1f0ae2be8b2b" name="XPath Match 2"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

exists(//*:id)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="ffa39cae-7d67-4188-a7e4-a04f18566db5" name="XPath Match 3"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

matches(//*:id,'\d{1,3}')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XQuery Match" id="40ef72cd-5b30-4f65-a3d1-ab745cbc5f2d" name="XQuery Match"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

&lt;Result>
&lt;Name>{data(//*:name/text())}&lt;/Name>
&lt;/Result></path><content>&lt;Result>
  &lt;Name>morpheus&lt;/Name>
&lt;/Result></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>page</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>Ê»?Æd?ÓEA?ëÏg7ò¢¿?4?Ôið¿DºŒÉ&lt;¦÷?™±ù’ÍW?â?0ä¾ü?ù/???ÿÿ??PK??????????!?�VD’”???G???????docProps/app.xml ¢??( ??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????œ“Okã0?Åï?û?Œî�œ´”%È*%ÝÒÃ.?HÚ</con:name><con:value>«ò8?•%£™š¤Ÿ~Ç6IœýsY�Fó?�ŸF’ºÛ7>ë ¡‹¡?óY.2?6–.ì</con:value></con:property></con:properties></con:testCase><con:testCase id="a8cb4faf-d2bb-4506-a8d6-c22f5e166005" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase-3" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting></con:settings><con:testStep type="restrequest" name="Request" id="9a2a9e5c-2b3a-4fbc-8398-1d9d3ffe890d"><con:settings/><con:config service="https://reqres.in" resourcePath="/api/users" methodName="Users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request" id="f49472ad-ce55-4451-a887-1232c1aec9d9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>https://reqres.in</con:endpoint><con:request>{
    "name": "morpheus",
    "job": "leader"
}</con:request><con:originalUri>https://reqres.in/api/users</con:originalUri><con:assertion type="Simple Contains" id="56c25eb7-42fa-43fe-82bf-079fa814a4ee" name="Contains"><con:configuration><token>morpheus</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="d893c6c6-22ac-4a2f-86de-6c572ca88755" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="0da6da4c-39c4-4c98-a4f2-89462f78af25" name="XPath Match"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

//*:name</path><content>morpheus</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="3d57d7b5-585e-4892-bd18-1f0ae2be8b2b" name="XPath Match 2"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

exists(//*:id)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="ffa39cae-7d67-4188-a7e4-a04f18566db5" name="XPath Match 3"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

matches(//*:id,'\d{1,3}')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XQuery Match" id="40ef72cd-5b30-4f65-a3d1-ab745cbc5f2d" name="XQuery Match"><con:configuration><path>declare namespace ns1='https://reqres.in/api/users';

&lt;Result>
&lt;Name>{data(//*:name/text())}&lt;/Name>
&lt;/Result></path><content>&lt;Result>
  &lt;Name>morpheus&lt;/Name>
&lt;/Result></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>page</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="deaf3e63-fb5f-4cb4-bf47-222c123e437f"><con:settings/><con:config><script>def tCase = testRunner.testCase.testSuite.testCases["TestCase-1"];
def prop  = new com.eviware.soapui.support.types.StringToObjectMap();

runner = tCase.run(null,false);

log.info ("   >>>   "+runner.getStatus().toString());

def testcases = context.testCase.testSuite.getTestCaseList()

testcases.each
{
	log.info("  >>>  "+it.name)

	if(it.name == "TestCase-1")
	{
	log.info("  >>  This is Test case-1")
	}
}
log.info(" TestCaseName is:  "+testRunner.testCase.name)</script></con:config></con:testStep><con:testStep type="groovy" name="RunTestSuite" id="c33efa2d-01db-4bf6-a7f1-936d7928f9ec"><con:settings/><con:config><script>def suite = context.testCase.testSuite.project.testSuites["SampleRunAutoTestSuite1"]
suite.run(null,false)

log.info ("     >>>   "+suite.getName().toString()+" - Executed Successfully")
</script></con:config></con:testStep><con:testStep type="groovy" name="RunTestProject" id="1869daf1-b773-46f5-a735-db3ff09000b9"><con:settings/><con:config><script>def projectName = testRunner.getTestCase().getTestSuite().getProject().getWorkspace().getProjectByName("GetService");
def runStatus = projectName.run(null,true);
Thread.sleep(6000);
log.info (" >>>  status is: "+runStatus.getStatus().toString())</script></con:config></con:testStep><con:properties><con:property><con:name>Ê»?Æd?ÓEA?ëÏg7ò¢¿?4?Ôið¿DºŒÉ&lt;¦÷?™±ù’ÍW?â?0ä¾ü?ù/???ÿÿ??PK??????????!?�VD’”???G???????docProps/app.xml ¢??( ??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????œ“Okã0?Åï?û?Œî�œ´”%È*%ÝÒÃ.?HÚ</con:name><con:value>«ò8?•%£™š¤Ÿ~Ç6IœýsY�Fó?�ŸF’ºÛ7>ë ¡‹¡?óY.2?6–.ì</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>city</con:name><con:value>Muni</con:value></con:property><con:property><con:name>county</con:name><con:value>India</con:value></con:property></con:properties></con:testSuite><con:properties/><con:afterLoadScript/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:beforeRunScript>log.info ("This runs before all testSuites")</con:beforeRunScript><con:afterRunScript>log.info ("This runs After all testSuites")</con:afterRunScript><con:sensitiveInformation/></con:soapui-project>